name: Playwright Salesforce Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      SF_LOGIN_URL: ${{ secrets.SF_LOGIN_URL }}
      SF_USERNAME: ${{ secrets.SF_USERNAME }}
      SF_PASSWORD: ${{ secrets.SF_PASSWORD }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Install dependencies
        run: npm ci

      - name: Run Playwright tests
        id: tests
        continue-on-error: true
        run: npx playwright test --reporter=json,html --output=test-results.json

      - name: Upload report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

      - name: Get test results
        id: results
        if: always()
        run: |
          # If the file doesn't exist, tests didn't run, set counts to 0
          if [ ! -f test-results.json ]; then
            echo "test-results.json not found. Setting counts to 0."
            echo "PASSED_COUNT=0" >> $GITHUB_ENV
            echo "FAILED_COUNT=0" >> $GITHUB_ENV
            echo "SKIPPED_COUNT=0" >> $GITHUB_ENV
            exit 0
          fi
          PASSED_COUNT=$(jq '.stats.expected' test-results.json)
          FAILED_COUNT=$(jq '.stats.unexpected + .stats.flaky' test-results.json)
          SKIPPED_COUNT=$(jq '.stats.skipped' test-results.json)
          echo "PASSED_COUNT=$PASSED_COUNT" >> $GITHUB_ENV
          echo "FAILED_COUNT=$FAILED_COUNT" >> $GITHUB_ENV
          echo "SKIPPED_COUNT=$SKIPPED_COUNT" >> $GITHUB_ENV

      - name: Send Slack Notification
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "color": "${{ steps.tests.outcome == 'success' && 'good' || 'danger' }}",
                  "blocks": [
                    { "type": "section", "text": { "type": "mrkdwn", "text": "Playwright Test Results for `${{ github.repository }}`" } },
                    { "type": "section", "fields": [
                        { "type": "mrkdwn", "text": "*Branch:*\n`${{ github.ref_name }}`" },
                        { "type": "mrkdwn", "text": "*Status:*\n${{ steps.tests.outcome == 'success' && '✅ Passed' || '❌ Failed' }}" },
                        { "type": "mrkdwn", "text": "*Passed:*\n${{ env.PASSED_COUNT }}" },
                        { "type": "mrkdwn", "text": "*Failed:*\n${{ env.FAILED_COUNT }}" },
                        { "type": "mrkdwn", "text": "*Skipped:*\n${{ env.SKIPPED_COUNT }}" }
                      ]
                    },
                    { "type": "actions", "elements": [ { "type": "button", "text": { "type": "plain_text", "text": "View Workflow Run" }, "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" } ] }
                  ]
                }
              ]
            }
